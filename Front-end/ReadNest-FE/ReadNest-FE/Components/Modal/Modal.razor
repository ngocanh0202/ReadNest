<div class="modal-backdrop @(IsOpen ? "active" : "")" @onclick="HandleBackdropClick">
    <div class="modal" @onclick:stopPropagation>
        <div class="modal-header">@Title</div>
        <div class="modal-body">@ChildContent</div>
        <div class="modal-footer">
            @if (ShowCancel)
            {
                <button class="btn-secondary" @onclick="OnCancelClick">@CancelText</button>
            }
            @if (ShowOk)
            {
                <button class="btn-primary" @onclick="OnConfirmClick">@ConfirmText</button>    
            }
        </div>            
    </div>
</div>

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public string Title { get; set; } = "Infor";
    [Parameter] public string ConfirmText { get; set; } = "OK";
    [Parameter] public string CancelText { get; set; } = "Cancel";
    [Parameter] public bool ShowCancel { get; set; } = true;
    [Parameter] public bool ShowOk { get; set; } = true;
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private async Task OnConfirmClick()
    {
        await OnConfirm.InvokeAsync();
    }

    private async Task OnCancelClick()
    {
        await OnCancel.InvokeAsync();
    }

    private async Task HandleBackdropClick()
    {
        await OnCancel.InvokeAsync();
    }
}