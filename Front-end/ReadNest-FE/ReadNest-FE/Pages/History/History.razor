@inject ReadNest_FE.Store.Store Store
@inject ReadNest_FE.Router.Router Router
@inject ReadNest_FE.Interfaces.INovelService NovelService
@inject ReadNest_FE.Interfaces.IReadingHistoryService ReadingHistoryService
@using ReadNest_Models
@using ReadNest_FE.Components.CardNovel
@using ReadNest_FE.Components.Slide
@using ReadNest_FE.Dictionaries
@page "/History"

<PageTitle>History</PageTitle>

<div class="container !px-2">
    <div class="!my-[2rem] flex items-center gap-2 font-bold">
        <button class="btn-icon danger !text-white" disabled>
            <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em"><path d="M16 2L20.9997 7L21 20.9925C21 21.5489 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5447 3 21.0082V2.9918C3 2.44405 3.44749 2 3.9985 2H16ZM15 4H5V20H19V8H15V4ZM13 9V13H16V15H11V9H13Z"></path></svg>
        </button>
        <p class="underline !text-lg !flex !flex-col !gap-1">
            <div>History</div>
            <div class="!h-[5px] !w-full !bg-red-300"></div>
        </p>
    </div>
    <div class="flex flex-col gap-2">
        @if (Store.readingHistories is not null && Store.readingHistories.Any())
            @for (int i = 0; i < Store.readingHistories.Count; i++)
            {
                var item = Store.readingHistories[i];
                <div class="flex !gap-3 !p-3 cursor-pointer transition-colors border-b border-[var(--border-color)]
                                                            hover:bg-[var(--bg-secondary)] last:border-b-0">
                    <div class="flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden bg-[var(--bg-secondary)] flex items-center justify-center">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" alt="@item.Id" class="w-full h-full object-cover" />
                        }
                        else
                        {
                            <div class="w-full h-full flex items-center justify-center text-[var(--text-secondary)]">
                                <svg class="w-8 h-8" viewBox="0 0 24 24" fill="none">
                                    <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20" stroke="currentColor" stroke-width="2" />
                                    <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z" stroke="currentColor" stroke-width="2" />
                                </svg>
                            </div>
                        }
                    </div>
                    <div class="flex-1 min-w-0 flex flex-col justify-center gap-1">
                        <a href="@Router.NovelUrl.Replace("{id}", item.NovelId)"
                           class="text-[15px] font-semibold text-[var(--text-primary)] m-0 overflow-hidden text-ellipsis whitespace-nowrap">
                            @item.NameNovel
                        </a>
                        <p class="text-[13px] text-[var(--text-secondary)] m-0 overflow-hidden text-ellipsis whitespace-nowrap">
                            @item.NameVolumn
                        </p>
                        <a href="@Router.ChapterUrl.Replace("{id}", item.ChapterId)"
                           class="text-[13px] text-[var(--text-secondary)] m-0 overflow-hidden text-ellipsis whitespace-nowrap">
                            @item.NameChapter
                        </a>
                    </div>
                </div>
            }
    </div>
</div>